
Процедура ПроверкаСогласованияПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
   Результат = 	ПроверкаСогласования ;
КонецПроцедуры

Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	//	
	//Инициатор = ПараметрыСеанса.ТекущийПользователь;
	//Записать();
	//
	//Сообщение = Новый СообщениеПользователю;
	//Сообщение.Текст = "Старт бизнес-процесса: " + ЭтотОбъект.Метаданные().Синоним;
	//
	//Сообщение.Сообщить();

КонецПроцедуры

Процедура СогласованиеЗаявкиПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	 ФормируемыеЗадачи[0].Сотрудник = Сотрудник;
КонецПроцедуры

Процедура ОтправитьВЗУППриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Если ДокументНаСогласование.Согласован Тогда
		//отправляем в ЗУП
		
		СтруктураДанных = Новый Структура();   
		СтруктураДанных.Вставить("Номер", ДокументНаСогласование.Номер);
		СтруктураДанных.Вставить("Дата", ДокументНаСогласование.Дата);
		СтруктураДанных.Вставить("СотрудникКод", ДокументНаСогласование.Сотрудник.Код);
		СтруктураДанных.Вставить("ВидОтпускаКод", ДокументНаСогласование.ВидОтпуска.Наименование);
		СтруктураДанных.Вставить("ДатаНачала", ДокументНаСогласование.ДатаНачала);
		СтруктураДанных.Вставить("ДатаОкончания", ДокументНаСогласование.ДатаОкончания);
		СтруктураДанных.Вставить("Рассмотрел", СокрЛП(ДокументНаСогласование.Согласующий));
		СтруктураДанных.Вставить("ДатаРассмотрения", СокрЛП(ДокументНаСогласование.ДатаРассмотрения));
	
		записьJSON = Новый ЗаписьJSON;
		записьJSON.УстановитьСтроку();
		ЗаписатьJSON(записьJSON,СтруктураДанных);
		СтрокаДляТела = записьJSON.Закрыть();
		
		Если Константы.ИспользоватьRMQ.Получить() Тогда
			ДанныеПодключения =  РаботаСRMQ.ПолучитьДанныеПодключения(Справочники.ВидыПодключений.ВыгрузкаОтпуска);
			ДанныеПодключения.Вставить("ТекстСообщения",СтрокаДляТела);
			
			Попытка
				РаботаСRMQ.ПодключитьИОтправитьСообщение(ДанныеПодключения);
			Исключение
			КонецПопытки;
			
		Иначе
			HTTP = Новый HTTPСоединение("localhost",80,"Администратор","",,,,);
			
			//заголовок создадим в виде соответствия
			ЗаголовокЗапросаHTTP = Новый Соответствие();
			//передаем в заголовках размер и тип данных на отправку
			ЗаголовокЗапросаHTTP.Вставить("Content-Type", "application/json; charset=utf-8");
			
			//создадим заголовок запроса
			ЗапросHTTP = Новый HTTPЗапрос("zup/hs/Exchange/add_Vac", ЗаголовокЗапросаHTTP);
			
			//загрузить строку в тело
			ЗапросHTTP.УстановитьТелоИзСтроки(СтрокаДляТела);//.УстановитьИмяФайлаТела(ФайлТелаЗапроса);
			
			//отсылаем POST-запрос на обработку.
			//ссылкаНаРесурс — ссылка на веб-сервер (страницу), к которой посылается POST
			//запрос
			ОтветHTTP = HTTP.ОтправитьДляОбработки(ЗапросHTTP);
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ОтправитьВЗУППередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
		СтандартнаяОбработка = ложь;
КонецПроцедуры

Процедура ОтправитьВЗУППриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	НоваяЗадача = Задачи.Задача.СоздатьЗадачу();
	НоваяЗадача.БизнесПроцесс = Ссылка;
	НоваяЗадача.ТочкаМаршрута = БизнесПроцессы.СогласованиеОтпуска.ТочкиМаршрута.ОтправитьВЗУП;
	НоваяЗадача.Дата = ТекущаяДата();
	НоваяЗадача.Наименование =  БизнесПроцессы.СогласованиеОтпуска.ТочкиМаршрута.ОтправитьВЗУП.НаименованиеЗадачи;
		
	//адресация
	НоваяЗадача.Сотрудник =  Справочники.Пользователи.БрокерСообщений;
		
	
	НоваяЗадача.Записать();  

КонецПроцедуры
